<?php

namespace Deployer;

require 'recipe/magento_2_1.php';

// Magento dir into the project root. Set "." if magento is installed on project root
set('magento_dir', 'magento');
// Git repository
set('repository', '');
// Space separated list of languages for static-content:deploy
set('languages', 'en_US');

// Tasks available only for specific roles
task('database:upgrade')->onRoles('db_write');

// OPcache configuration
task('cache:clear:opcache', 'sudo /usr/sbin/service php7.0-fpm reload');
after('clear:cache', 'cache:clear:opcache');
task('cache:clear:opcache')->onRoles('opcache_clear');

// Remote Servers
host('dev_master')
    ->hostname('<hostname>')
    ->user('<user>')
    ->set('deploy_path', '~')
    ->stage('dev')
    ->roles('db_write', 'opcache_clear');

host('stage_master')
    ->hostname('<hostname>')
    ->user('<user>')
    ->set('deploy_path', '~')
    ->stage('stage')
    ->roles('db_write', 'opcache_clear');

host('prod_master')
    ->hostname('<hostname>')
    ->user('<user>')
    ->set('deploy_path', '~')
    ->stage('prod')
    ->roles('db_write', 'opcache_clear');

// Multi-server Configuration
//host('prod_slave_1')
//    ->hostname('<hostname>')
//    ->user('<user>')
//    ->set('deploy_path', '~')
//    ->stage('prod')
//    ->roles('opcache_clear');
//
//host('prod_slave_1')
//    ->hostname('<hostname>')
//    ->user('<user>')
//    ->set('deploy_path', '~')
//    ->stage('prod')
//    ->roles('opcache_clear');
